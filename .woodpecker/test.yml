variables:
  - &minio-settings
    access_key:
      from_secret: minio_access_key
    secret_key:
      from_secret: minio_secret_key
    endpoint:
      from_secret: minio_endpoint
    path_style: true
    region: eu-central-jcm

steps:
  build:
    image: ubuntu:noble
    commands:
      - UBUNTU_VERSION=noble
      - apt-get update
      - DEBIAN_FRONTEND=noninteractive apt-get install -y curl
      - mkdir -p /etc/apt/keyrings
      - curl https://apt.llvm.org/llvm-snapshot.gpg.key -o /etc/apt/keyrings/llvm.asc
      - echo "deb [signed-by=/etc/apt/keyrings/llvm.asc] http://apt.llvm.org/noble/ llvm-toolchain-noble-19 main" > /etc/apt/sources.list.d/llvm.list
      - apt-get update
      - >-
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
        clang-19 clang-tools-19 cmake ninja-build git glslang-tools xxd patch curl gettext ca-certificates libglib2.0-bin imagemagick
        libvulkan-dev pkg-config libsystemd-dev libsdl2-dev libsdl2-mixer-dev libsdl2-image-dev libglm-dev
        libspdlog-dev libfreetype-dev libglibmm-2.4-dev libsdbus-c++-dev libboost-dev
      - .woodpecker/download_unlicensed.sh
      - BUILD_VERSION=$(git describe --tags --always)
      - >-
        cmake -B build -G Ninja
        -DCMAKE_C_COMPILER=clang-19 -DCMAKE_CXX_COMPILER=clang++-19
        -DCMAKE_BUILD_TYPE=Debug -DBUILD_VERSION=$BUILD_VERSION
      - cmake --build build --parallel 2
      - glib-compile-schemas schemas
      # Install it (and upload it for debugging)
      - cd build/
      - mkdir -p upload/build upload/beta
      - DESTDIR=install cmake --install . --prefix /usr
      - tar -vcaf upload/build/xmbshell-$BUILD_VERSION-$UBUNTU_VERSION-$(arch).tar.gz -C install .
      - cp upload/build/xmbshell-$BUILD_VERSION-$UBUNTU_VERSION-$(arch).tar.gz upload/beta/xmbshell-beta-$UBUNTU_VERSION-$(arch).tar.gz
      # Sleep for robustness
      - sleep 60
  build-upload-build:
    image: woodpeckerci/plugin-s3
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/upload/build/*
      strip_prefix: build/upload/build/
      target: /artifacts/${CI_REPO}/${CI_PIPELINE_NUMBER}/public/
  build-upload-branch:
    image: woodpeckerci/plugin-s3
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/upload/beta/*
      strip_prefix: build/upload/beta/
      target: /artifacts/${CI_REPO}/${CI_COMMIT_BRANCH}/public/
      overwrite: true
  test:
    image: ubuntu:noble
    commands:
      - apt-get update
      - >-
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends
        dbus-x11 mesa-vulkan-drivers libsdl2-2.0-0 libsdl2-mixer-2.0-0 libsdl2-image-2.0-0
        libspdlog1.12 libglibmm-2.4-1t64 libsdbus-c++1
        vulkan-validationlayers ffmpeg fonts-ubuntu xdotool
      - DREAMRENDER_DEVICE_NAME="V3D 4.2.14" ./test/headless.sh
    volumes:
      - /dev/dri/renderD128:/dev/dri/renderD128
    privileged: true
  test-upload:
    image: woodpeckerci/plugin-s3
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/test-*
      strip_prefix: build/
      target: /artifacts/${CI_REPO}/${CI_PIPELINE_NUMBER}/public/
    when:
      - status: [ success, failure ]
  test-upload-branch:
    image: woodpeckerci/plugin-s3
    settings:
      <<: *minio-settings
      bucket: woodpecker
      source: build/test-output.web*
      strip_prefix: build/
      target: /artifacts/${CI_REPO}/${CI_COMMIT_BRANCH}/public/
      overwrite: true
